use namespace="System"
use namespace="System.Collections"
use namespace="System.IO"
use import="Files"
use import="BuildEnv"
use import="Environment"

default BASE_DIR="${Directory.GetCurrentDirectory()}"

var AUTHORS="Andrey Taritsyn"

use-standard-lifecycle

#run-dotnet-tests description="Runs a unit tests for DotNet version"
	@{
		string testDirPath = Path.Combine(BASE_DIR, "test");
		string[] testProjectNames = {
			"MsieJavaScriptEngine.Test.Common",
			"MsieJavaScriptEngine.Test.Auto",
			"MsieJavaScriptEngine.Test.ChakraEdgeJsRt",
			"MsieJavaScriptEngine.Test.ChakraIeJsRt",
			"MsieJavaScriptEngine.Test.ChakraActiveScript",
			"MsieJavaScriptEngine.Test.Classic"
		};

		Log.Info("Run unit tests for DotNet version:");
		Log.Info("");

		foreach (string testProjectName in testProjectNames)
		{
			Log.Info(string.Format('Tests for "{0}" project:', testProjectName));
			Log.Info("");

			string testProjectDirPath = Path.Combine(testDirPath, testProjectName);
			string testAssemblyDirPath;
			string testAssemblyFilePath;

			testAssemblyDirPath = Path.Combine(testProjectDirPath, "bin/Release/net451");
			testAssemblyFilePath = Path.Combine(testAssemblyDirPath, testProjectName + ".exe");
			Exec(testAssemblyFilePath, "", testProjectDirPath);

			testAssemblyDirPath = Path.Combine(testProjectDirPath, "bin/Release/netcoreapp1.0");
			if (Directory.Exists(testAssemblyDirPath))
			{
				testAssemblyFilePath = Path.Combine(testAssemblyDirPath, testProjectName + ".dll");
				Exec("dotnet", testAssemblyFilePath, testProjectDirPath);
			}

			Log.Info("");
		}

		Log.Info("");
	}

#run-net4-tests description="Runs a unit tests for .NET 4.0 version"
	@{
		string nunitConsolePath = "packages/NUnit.ConsoleRunner/tools/nunit3-console.exe";
		string testDirPath = Path.Combine(BASE_DIR, "test");

		Log.Info("Run unit tests for .NET 4.0 version:");
		Log.Info("");
		Exec(nunitConsolePath, "MsieJavaScriptEngine.Test.Net4.nunit --verbose", testDirPath);
		Log.Info("");
	}

macro name="Exec" program="string" commandline="string"
	exec

macro name="Exec" program="string" commandline="string" workingdir="string"
	exec