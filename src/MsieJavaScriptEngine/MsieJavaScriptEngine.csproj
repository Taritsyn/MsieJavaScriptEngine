<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<Product>MSIE JavaScript Engine for .NET</Product>
		<VersionPrefix>3.0.0</VersionPrefix>
		<VersionSuffix>rc1</VersionSuffix>
		<TargetFrameworks>net40-client;net45;netstandard1.3;netstandard2.0</TargetFrameworks>
		<NetStandardImplicitPackageVersion Condition=" '$(TargetFramework)' == 'netstandard1.3' ">1.6.0</NetStandardImplicitPackageVersion>
		<OutputType>Library</OutputType>
		<TreatWarningsAsErrors>true</TreatWarningsAsErrors>
		<AssemblyOriginatorKeyFile>../../build/Key.snk</AssemblyOriginatorKeyFile>
		<SignAssembly>true</SignAssembly>
		<PublicSign Condition=" '$(OS)' != 'Windows_NT' ">true</PublicSign>
		<NoWarn>$(NoWarn);CS1591;NU5125</NoWarn>
		<GenerateDocumentationFile>true</GenerateDocumentationFile>
		<DisableDefaultResxToCsConversionTarget>true</DisableDefaultResxToCsConversionTarget>
		<Title>$(Product)</Title>
		<Authors>Andrey Taritsyn</Authors>
		<Description>This library is a .NET wrapper for working with the JavaScript engines of Internet Explorer and Edge (JsRT versions of Chakra, ActiveScript version of Chakra and Classic JavaScript Engine). Project was based on the code of SassAndCoffee.JavaScript (http://github.com/paulcbetts/SassAndCoffee), Chakra Sample Hosts (http://github.com/panopticoncentral/chakra-host) and jsrt-dotnet (http://github.com/robpaveza/jsrt-dotnet).</Description>
		<PackageLicenseUrl>https://github.com/Taritsyn/MsieJavaScriptEngine/blob/master/LICENSE.md</PackageLicenseUrl>
		<PackageRequireLicenseAcceptance>false</PackageRequireLicenseAcceptance>
		<PackageProjectUrl>https://github.com/Taritsyn/MsieJavaScriptEngine</PackageProjectUrl>
		<PackageIconUrl>http://i.imgur.com/cbiHK.png</PackageIconUrl>
		<RepositoryUrl>https://github.com/Taritsyn/MsieJavaScriptEngine</RepositoryUrl>
		<RepositoryType>git</RepositoryType>
		<PackageTags>JavaScript;ECMAScript;MSIE;IE;Edge;Chakra</PackageTags>
		<PackageReleaseNotes>1. Improved performance of debugging in ActiveScript modes;
2. `GetSourceFragmentFromLine` method of `JsErrorHelpers` class has been replaced by the `GetTextFragmentFromLine` method of `TextHelpers` class;
3. One part of the auxiliary code was removed, and other part moved to an external library - AdvancedStringBuilder.</PackageReleaseNotes>
		<NeutralLanguage>en-US</NeutralLanguage>
		<PackageOutputPath>../../nuget</PackageOutputPath>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<GenerateAssemblyTitleAttribute>false</GenerateAssemblyTitleAttribute>
		<GenerateAssemblyDescriptionAttribute>false</GenerateAssemblyDescriptionAttribute>
	</PropertyGroup>

	<Import Project="../../build/common.props" />
	<Import Project="../../build/net40-client-target.props" />

	<ItemGroup>
		<PackageReference Include="AdvancedStringBuilder" Version="0.1.0" />
		<PackageReference Include="BuildBundlerMinifier" Version="2.4.337" PrivateAssets="All" />
		<PackageReference Include="ResxToCs.MSBuild" Version="1.0.0-alpha5" PrivateAssets="All" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'net40-client' Or '$(TargetFramework)' == 'net45' ">
		<Compile Remove="Resources/NetCoreStrings.*" />
		<EmbeddedResource Include="Resources/ES5.min.js;Resources/json2.min.js" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.3' Or '$(TargetFramework)' == 'netstandard2.0' ">
		<Compile Remove="Resources/NetFrameworkStrings.*" />
	</ItemGroup>

	<ItemGroup Condition=" '$(TargetFramework)' == 'netstandard1.3' ">
		<PackageReference Include="System.ComponentModel.TypeConverter" Version="4.1.0" />
		<PackageReference Include="System.Reflection.TypeExtensions" Version="4.1.0" />
		<PackageReference Include="System.Threading.Thread" Version="4.0.0" />
	</ItemGroup>

	<ItemGroup>
		<Content Include="readme.txt">
			<PackagePath>readme.txt</PackagePath>
			<Pack>true</Pack>
		</Content>
		<Content Include="../../Licenses/*.txt">
			<PackagePath>/</PackagePath>
			<Pack>true</Pack>
			<Visible>false</Visible>
		</Content>
	</ItemGroup>

	<Target Name="СonvertResxToCs" BeforeTargets="BeforeCompile">
		<ResxToCsTask InputDirectory="./Resources/" Namespace="$(RootNamespace).Resources" InternalAccessModifier="true" />
	</Target>

</Project>